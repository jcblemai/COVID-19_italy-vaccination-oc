#!/bin/bash -l
#SBATCH --nodes 1            # Node PER JOB !
#SBATCH --ntasks-per-node 1  # MPI sense -> just 1.
#SBATCH --cpus-per-task 36   # No more than the number of CPU in a node. CPU <- coeur dans slurm
#SBATCH --mem 180G          # Per node
#SBATCH --time 3-0           #J-H:m:s
#SBATCH --array=1         # Index are choosen by me (can relaunch) before 0-1

N=${SLURM_ARRAY_TASK_ID}

module purge
module restore COVID_OCP
source $HOME/venvs/$SYS_TYPE/bin/activate
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$HOME/src/hsl/20190503/lib

# If one job per node
#export OMP_NUM_THREADS=$SLURM_CPUS_PER_TASK
#srun python main.py -s ${SLURM_ARRAY_TASK_ID}

# If two jobs per nodes
export OMP_NUM_THREADS=$(( $SLURM_CPUS_PER_TASK / 2 ))
export TASK_ID0=$(( ${SLURM_ARRAY_TASK_ID} * 2 + 0 ))
export TASK_ID1=$(( ${SLURM_ARRAY_TASK_ID} * 2 + 1 ))

srun -c $OMP_NUM_THREADS  --mem-per-cpu=5G -m '*:block:*' python main.py -s $TASK_ID0 -n 107 --use_matlab False > out$TASK_ID0.out 2>&1 &  # is conflicting
srun -c $OMP_NUM_THREADS  --mem-per-cpu=5G -m '*:block:*' python main.py -s $TASK_ID1 -n 107 --use_matlab False > out$TASK_ID1.out 2>&1 &
wait  # so it waits for both
